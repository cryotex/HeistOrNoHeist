<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mLocalControlled = true;

mJumpSpeed = 0;
mFacingRight = true;
mCanAttack = true;
mRunning = false;
mHealth = 4;
mCurrentTime = 0;
mStartTime = 0;
mCurrentKey = 0;
if(!global.haveServer &amp;&amp; global.traitor)mAmITheTraitor = true; else mAmITheTraitor=false;

image_speed=.5;

mWeaponList = ds_list_create();

ds_list_add(mWeaponList, KNIFE);
//ds_list_add(mWeaponList, AXE);  //should be pickup

mListPointer = 0;
mCurrentWeapon = KNIFE;
mWeaponSprite = sprPlayerKnifeAttack;

//create the msg to inform the player of what they are
if(!instance_exists(objMessage)){
    with(instance_create(view_wport[0]/2,view_hport[0],objMessage))
    {
        image_yscale=0.4;
        image_xscale=0.5;
        if(global.traitor){
            sprite_index = sprTraitor;
        }else{
            sprite_index = sprInnocent;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y += mJumpSpeed;

if(mHealth&lt;=0 &amp;&amp; image_speed&gt;0 &amp;&amp; (!(sprite_index==sprFatalFront || sprite_index==sprFatalBack)))
{
    sprite_index=sprFatalBack;
    image_index=0; //sprite_get_number(sprite_index)-1
}

if(sprite_index==sprDamageFront || sprite_index==sprDamageBack)
{
    if(image_index==(sprite_get_number(sprite_index)-1))
        sprite_index=sprPlayerIdle;
}
if(sprite_index==sprFatalFront || sprite_index==sprFatalBack)
{
    if(image_index==(sprite_get_number(sprite_index)-1))
        image_speed=0;
}

//This is the most horriblist code evar, but it works. . . for now. 
if((position_meeting(x,y+(sprite_height/2), objHouse) || position_meeting(x+(sprite_width/5),y+(sprite_height/2), objHouse) ||  position_meeting(x-(sprite_width/5),y+(sprite_height/2), objHouse)) &amp;&amp; mJumpSpeed&gt;=0) // then a jump has just started
{   
    //hit the floor brah
    if(sprite_index==sprPlayerJump)sprite_index=sprPlayerIdle;
    
    mJumpSpeed = 0;
    //push up till not colliding
    //while((position_meeting(x,y+(sprite_height/2), objHouse) || position_meeting(x+(sprite_width/4),y+(sprite_height/2), objHouse) ||  position_meeting(x-(sprite_width/4),y+(sprite_height/2), objHouse)))
    if(position_meeting(x,y+(sprite_height/2)+(CONST_INCREMENT*5),objHouse) || position_meeting(x,y+(sprite_height/2)+(CONST_INCREMENT*10),objHouse)|| position_meeting(x,y+(sprite_height/2)+(CONST_INCREMENT*20),objHouse))
    {
        while((!position_meeting(x,y+(sprite_height/2)+CONST_INCREMENT, objHouse)))
            y+=CONST_INCREMENT;
        while((position_meeting(x,y+(sprite_height/2)-CONST_INCREMENT, objHouse)))
            y-=CONST_INCREMENT;
   }
}
else
{
    if(position_meeting(x,y-(sprite_height/2), objHouse) &amp;&amp; mJumpSpeed &lt; 0)
    {
        mJumpSpeed = 0;
    }
    else
        mJumpSpeed ++;
}

//If the player is currently attacking
if(!mCanAttack)
{
    //if the current sprite is an attack anim and it is at the end of the animation
    if(sprite_index == mWeaponSprite &amp;&amp; image_index == image_number-1)
    {
        sprite_index = sprPlayerIdle;
        mCanAttack = true;
    }
}

//with (objAxe) { x = other.x; y = other.y; } 
//with (objKnife) { x = other.x; y = other.y; } 

//if(sprite_index == sprPlayerRunning || sprite_index == sprPlayerCrouch &amp;&amp; image_index = image_number -1)
//{
//    sprite_index = sprPlayerIdle;
//}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(!global.haveServer)
{
    clientSendKey(KEY_MOUSEWHEEL_DOWN,true);
    event_user(KEY_MOUSEWHEEL_DOWN);
}
else if(id=instance_find(objPlayer,0))
    event_user(KEY_MOUSEWHEEL_DOWN);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(!global.haveServer)
{
    clientSendKey(KEY_MOUSEWHEEL_UP,true);
    event_user(KEY_MOUSEWHEEL_UP);
}
else if(id=instance_find(objPlayer,0))
    event_user(KEY_MOUSEWHEEL_UP);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(!global.haveServer)
{
    clientSendKey(KEY_GLOB_LEFT_PRESSED,true);
    event_user(KEY_GLOB_LEFT_PRESSED);
}
else if(id=instance_find(objPlayer,0))
    event_user(KEY_GLOB_LEFT_PRESSED);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///space bar
var tId=instance_position(x, y, objDoor);
if(tId!=noone)
{
    with(tId)
    {
        var partnerIndex = ds_list_find_value(Partner,irandom(ds_list_size(Partner)-1));
        other.x = partnerIndex.x;
        other.y = partnerIndex.y;
    }
}
else
{
    //handle traitor interactions
    if(mAmITheTraitor){
        //go through the chandelers
        with(objChandTrap)
        {
            //check if thr traitor is above the chandeler trap
            if(other.x &lt; (x+(sprite_width/2)) &amp;&amp; other.x &gt; (x-(sprite_width/2)) &amp;&amp; other.y &lt; y &amp;&amp; other.y &gt; (y-sprite_height))
            {
                //check if it has been used
                if(!beenActivated)
                {
                    //with(objNetworkController)
                    //{
                        buffer_seek(global.ntwk.buff, buffer_seek_start, 0);
                        buffer_write(global.ntwk.buff, buffer_u8, CMD_GAME );
                        buffer_write(global.ntwk.buff, buffer_u8, CMD_TRAP_ACTIVATION );
                        buffer_write(global.ntwk.buff,buffer_u32, id);   
                        var buffer_size = buffer_tell(global.ntwk.buff);
                        
                        //send to each player
                        for(var i=0;i&lt;global.playerTotal;i++){
                            // get the socket
                            var sock = ds_list_find_value(global.ntwk.socketlist,i);
                            // Send data to client
                            network_send_packet(sock, global.ntwk.buff, buffer_size );
                        }
                    //}
                    
                    //do function for host client
                    event_user(10);
               }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse wheel down
if(mListPointer &gt; 0 &amp;&amp; mCanAttack)
{
    mListPointer--;
    mCurrentWeapon = ds_list_find_value(mWeaponList, mListPointer);
    
    if(mCurrentWeapon == KNIFE)
    {
        mWeaponSprite = sprPlayerKnifeAttack;
    }
    else if(mCurrentWeapon == AXE)
    {
        mWeaponSprite = sprPlayerAxeAttack;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse wheel Up
if(mListPointer &lt; ds_list_size(mWeaponList) -1 &amp;&amp; mCanAttack)
{
    mListPointer++;
    mCurrentWeapon = ds_list_find_value(mWeaponList, mListPointer);

    if(mCurrentWeapon == KNIFE)
    {
        mWeaponSprite = sprPlayerKnifeAttack;
    }
    else if(mCurrentWeapon == AXE)
    {
        mWeaponSprite = sprPlayerAxeAttack;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Glob Left Pressed
//player also can't attack if they are jumping

if(mCanAttack &amp;&amp; position_meeting(x,y+(sprite_height/2)+CONST_INCREMENT, objHouse))
{
    //Check weapon type here
    sprite_index = mWeaponSprite;
    image_index = 0;
    
    //can't attack until animation is finished
    mCanAttack = false;
    
    //collect collision object
    if(mCurrentWeapon == KNIFE &amp;&amp; !mFacingRight)
    {  
        var x1 = x;
        var y1 = y;
        var x2 = x + (sprite_width/2) + 20;
        var y2 = y + (sprite_height/2);
          
        var coll = collision_rectangle(x1, y1, x2, y2, objPlayer, false, true);
    }
    else if(mCurrentWeapon == KNIFE &amp;&amp; mFacingRight)
    {  
        var x1 = x;
        var y1 = y;
        var x2 = x + (sprite_width/2) +- 20;
        var y2 = y + (sprite_height/2);
          
        var coll = collision_rectangle(x1, y1, x2, y2, objPlayer, false, true);
    }
   
            
    if(mCurrentWeapon == AXE &amp;&amp; !mFacingRight)
    {
        var x1 = x;
        var y1 = y ;
        var x2 = x + (sprite_width/2)+40;
        var y2 = y + (sprite_height/2);
        
        var coll = collision_rectangle(x1, y1, x2, y2, objPlayer, false, true);
    }
    else if(mCurrentWeapon == AXE &amp;&amp; mFacingRight)
    {
        var x1 = x;
        var y1 = y ;
        var x2 = x + (sprite_width/2)-40;
        var y2 = y + (sprite_height/2);
        
        var coll = collision_rectangle(x1, y1, x2, y2, objPlayer, false, true);
    }
    
    

    //if colliding, do stuff to the player being hit
    if(coll != noone &amp;&amp; coll != id)
    {
        with(coll)
        {
            if(other.mFacingRight == mFacingRight)
            {
                
                mHealth -=2;
                if(mHealth &gt; 0)
                {
                    sprite_index = sprDamageBack;
                    image_index = 0;
                }
                else if(mHealth &lt;=0)
                {
                    sprite_index = sprFatalBack;
                    image_index = 0;
                }
            }
            
            if(other.mFacingRight != mFacingRight)
            {
                mHealth -=1;
                if(mHealth &gt; 0)
                {
                    sprite_index = sprDamageFront;
                    image_index = 0;
                }
                else if(mHealth &lt;=0)
                {
                    sprite_index = sprFatalFront;
                    image_index = 0;
                }
                
                
            }
            
            
        }
        
        audio_play_sound(choose(sndScream1,sndScream2,sndScream3), 10, false); 
        
    }
    else
    {
        audio_play_sound(choose(sndAxe1,sndAxe2,sndAxe3,sndAxe4,sndAxe5), 10, false);
    }  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///D-key
//if the local player is facing left


//player cannot move if attacking
if(sprite_index != mWeaponSprite)
{
    if(sprite_index!=sprPlayerJump &amp;&amp; sprite_index!=sprPlayerCrouch) sprite_index = sprPlayerRunning;
    //if the local player is facing left
    if(!mFacingRight)
    {
        mFacingRight = true;
        image_xscale = 0.25;
    }
    
    var lb = position_meeting(x+(sprite_width/4)+PlayerSpeed,y + (sprite_height/2), objHouse);  //leftbottom
    var lm = position_meeting(x+(sprite_width/4)+PlayerSpeed,y, objHouse);                      //leftmiddle
    var lt = position_meeting(x+(sprite_width/4)+PlayerSpeed,y - (sprite_height/2), objHouse);  //lefttop
    
    //for checks against player collisions
    var coll = position_meeting(x+(sprite_width/4)+PlayerSpeed,y, objOtherPlayer);    //THIS NEEDS CHANGED FOR COLLISION

    if(!lm &amp;&amp; !lt &amp;&amp; !position_meeting(x+(sprite_width/4)+PlayerSpeed,y+(sprite_height/2)-CONST_SLOPE,objHouse))
    {
        if(!coll)
        {
            //to walk up slopes, lets check to the left and up slightly, if its free, then we are at a slope. if not, a wall. 
            x += PlayerSpeed; 
            //y -= CONST_SLOPE;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///S-Key

//do nothing yo

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A-key
//if the local player is facing left


//player cannot move if attacking
if(sprite_index != mWeaponSprite)
{
    if(sprite_index!=sprPlayerJump &amp;&amp; sprite_index!=sprPlayerCrouch) sprite_index = sprPlayerRunning;
    //if the local player is facing right
    if(mFacingRight)
    {
        mFacingRight = false;
        image_xscale = -0.25;
    }
    
    var lb = position_meeting(x+(sprite_width/4)+PlayerSpeed,y + (sprite_height/2), objHouse);  //leftbottom
    var lm = position_meeting(x+(sprite_width/4)+PlayerSpeed,y, objHouse);                      //leftmiddle
    var lt = position_meeting(x+(sprite_width/4)+PlayerSpeed,y - (sprite_height/2), objHouse);  //lefttop
    
    //for player collision
    var coll = position_meeting(x+(sprite_width/4)+PlayerSpeed,y, objOtherPlayer);      //THIS NEEDS CHANGED FOR COLLISION
    
    if(!lm &amp;&amp; !lt &amp;&amp; !position_meeting(x+(sprite_width/4)+PlayerSpeed,y+(sprite_height/2)-CONST_SLOPE,objHouse))
    {
        if(!coll)
        {
    //to walk up slopes, lets check to the left and up slightly, if its free, then we are at a slope. if not, a wall. 
            x -= PlayerSpeed; 
            //y -= CONST_SLOPE;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///W-key

//if(position_meeting(x,y+(sprite_height/2)+CONST_INCREMENT, objHouse) || position_meeting(x+(sprite_width/2),y+(sprite_height/2)+CONST_INCREMENT, objHouse) ||  position_meeting(x-(sprite_width/2),y+(sprite_height/2)+CONST_INCREMENT, objHouse))   

//don't allow a jump if the player is attacking
if(sprite_index != mWeaponSprite)
{
    if(position_meeting(x,y+(sprite_height/2)+CONST_INCREMENT, objHouse))   
    {
        sprite_index = sprPlayerJump;
        mJumpSpeed = MaxJumpSpeed;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(id==objPlayer.id)
    draw_self();
else
{   //if we are not drawing ourself (for the benefit of the server)
    if(!surface_exists(global.SurfaceActive))
    {
        global.SurfaceActive = surface_create(view_wview[0],view_hview[0]);
        surface_set_target(global.SurfaceActive);
        draw_clear_alpha(c_black,0);
        surface_reset_target();
    }
    surface_set_target(global.SurfaceActive);
    draw_sprite_ext(sprite_index,image_index,x-view_xview[0],y-view_yview[0],image_xscale,image_yscale,0,c_white,1);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(mHealth&gt;0)
{
if(!global.haveServer)
{
    clientSendKey(KEY_W,true);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_W]=true;
    //event_user(KEY_A);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(mHealth&gt;0)
{
if(!global.haveServer)
{
    clientSendKey(KEY_S,true);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_S]=true;
    //event_user(KEY_A);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send D key press and if server apply it
if(mHealth&gt;0)
{
if(!global.haveServer)
{
    clientSendKey(KEY_D,true);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_D]=true;
    //event_user(KEY_A);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(mHealth&gt;0)
{
    if(!global.haveServer)
    {
        clientSendKey(KEY_A,true);
        //event_user(KEY_A);
    }
    else if(id=instance_find(objPlayer,0))
        global.Keys[0,KEY_A]=true;
        //event_user(KEY_A);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(mHealth&gt;0)
{
    if(!global.haveServer)
    {
        clientSendKey(KEY_SPACEBAR,true);
        //event_user(KEY_SPACEBAR);
    }
    else if(id=instance_find(objPlayer,0))
        event_user(KEY_SPACEBAR);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(!global.haveServer)
{
    clientSendKey(KEY_W,false);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_W]=false;
    //event_user(KEY_A);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it
if(!global.haveServer)
{
    clientSendKey(KEY_S,false);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_S]=false;
    //event_user(KEY_A);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send D key press and if server apply it

if(!global.haveServer)
{
    clientSendKey(KEY_D,false);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_D]=false;
    //event_user(KEY_A);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send A key press and if server apply it

if(!global.haveServer)
{
    clientSendKey(KEY_A,false);
    //event_user(KEY_A);
}
else if(id=instance_find(objPlayer,0))
    global.Keys[0,KEY_A]=false;
    //event_user(KEY_A);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
